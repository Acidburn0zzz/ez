#! /bin/bash

#This script is ment for simplicity. You don't have to worry about 
missing packages, folders, builds and you can even compile with this 
script via makepkg and automated option for "sudo pacman -U"


#PREPARATION
sudo pacman -Syyu
if [[ ! -e $HOME/abs ]]; then
        mkdir $HOME/abs ;
fi

#INSTALLATION
action=$1
shift

case "$action" in
	# Actions used regularly
	#Compile info: This scripts edits makepkg, adding a simple line 
so that pacman will automatically update ( sudo pacman -U 
package.pkg.tar ) the compiled ".pkg.tar" file.
	-compile | -c)
	
if [[ ! -x /usr/bin/pbget ]]; then
	yaourt pbget ;
fi

sudo sed -i '2397 cd $HOME/abs/${pkgname} && sudo pacman -U 
$pkgname-$fullver-$pkgarch.pkg.tar' /usr/bin/makepkg

	cd /home/$USER/abs && pbget "$@" --aur && cd 
/home/$USER/abs/"$@" && CONCURRENCY_LEVEL=$(grep -c '^processor' 
/proc/cpuinfo) && makepkg -sci --skippgpcheck && sudo sed -i '2397 d' 
/usr/bin/makepkg		
		;;
	aur | -aur)
if [[ ! -x /usr/bin/yaourt ]]; then
	sudo pacman -S yaourt ;
fi
	yaourt "$@"
		;;
	removepackage | -rm)
	pacman -Rv "$@"
		;;
	install | -i)
	pacman -S "$@"
		;;
	removeconfig | -rmcfg)
	pacman -Rnv "$@"
		;;
	destroy | -purge)
	pacman -Rsncuv "$@"
		;;
	-R--dbpath | -b)
	pacman -Rbv "$@"
		;;
	-R-c | --cascade)
	pacman -Rcv "$@"
		;;
	-R-d | --nodeps)
	pacman -Rdv "$@"
		;;
	-R-n | --nosave)
	pacman -Rnv "$@"
		;;
	-R-p | --print)
	pacman -Rpv "$@"
		;;
	-R-r | --root)
	pacman -Rrv "$@"
		;;
	-R-u | --unneeded)
	pacman -Ruv "$@"
		;;
	-R-v | --verbose)
	pacman -Rv "$@"
		;;
	-R--arch)
	pacman -R --arch "$@"
		;;
	-R--assume-installed)
	pacman -R --asume-installed "$@"
		;;
	-R--logfile)
	pacman -R --logfile "$@"
		;;
	-R--noconfirm)
	pacman -R --noconfirm "$@"
		;;
	-R--noprogressbar)
	pacman -R --noprogressbar "$@"
		;;
	-R--noscriptlet)
	pacman -R --noscriptlet "$@"
		;;
	-R--print-format)
	pacman -R --print-format "$@"
		;;
	--information | -info)
        pacman -S -i | grep "$@"
		;;
	--find | -f)
	pacman -S -l | grep "$@"
		;;
esac
